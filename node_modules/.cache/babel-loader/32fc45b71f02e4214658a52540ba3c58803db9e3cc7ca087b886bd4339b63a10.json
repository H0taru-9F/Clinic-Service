{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fenia\\\\project\\\\stepan\\\\src\\\\pages\\\\TestSendToServer.js\";\nimport React from \"react\";\nimport { ButtonV2 } from \"../components/CustomButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestSendToServer = () => {\n  const checkOne = async () => {\n    try {\n      const response = await fetch('http://localhost:8081/api/v1/auth/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: 'ivan@example.com',\n          password: '2222'\n        }),\n        mode: 'cors'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Data received:', data);\n      } else {\n        console.error('Request failed with status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error during fetch:', error);\n    }\n  };\n  const checkTwo = async () => {\n    try {\n      const response = await fetch('http://localhost:8081/api/v1/auth/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: 'ivan@example.com',\n          password: '2222'\n        }),\n        mode: 'no-cors'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Data received:', data);\n      } else {\n        console.error('Request failed with status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error during fetch:', error);\n    }\n  };\n  const checkFour = async () => {\n    try {\n      const response = await fetch('http://localhost:8081/api/v1/auth/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: 'ivan@example.com',\n          password: '2222'\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Data received:', data);\n      } else {\n        console.error('Request failed with status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error during fetch:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonV2, {\n      title: \"check1 cors\",\n      onClick: checkOne\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonV2, {\n      title: \"check2 no-cors\",\n      onClick: checkTwo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonV2, {\n      title: \"check4 nothing\",\n      onClick: checkFour\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_c = TestSendToServer;\nexport default TestSendToServer;\nvar _c;\n$RefreshReg$(_c, \"TestSendToServer\");","map":{"version":3,"names":["React","ButtonV2","jsxDEV","_jsxDEV","TestSendToServer","checkOne","response","fetch","method","headers","body","JSON","stringify","email","password","mode","ok","data","json","console","log","error","status","checkTwo","checkFour","children","title","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fenia/project/stepan/src/pages/TestSendToServer.js"],"sourcesContent":["import React from \"react\";\r\nimport {ButtonV2} from \"../components/CustomButtons\";\r\n\r\nconst TestSendToServer = () => {\r\n    const checkOne = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8081/api/v1/auth/signin', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    email: 'ivan@example.com',\r\n                    password: '2222'\r\n                }),\r\n                mode: 'cors',\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log('Data received:', data);\r\n            } else {\r\n                console.error('Request failed with status:', response.status);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during fetch:', error);\r\n        }\r\n    };\r\n    const checkTwo = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8081/api/v1/auth/signin', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    email: 'ivan@example.com',\r\n                    password: '2222'\r\n                }),\r\n                mode: 'no-cors',\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log('Data received:', data);\r\n            } else {\r\n                console.error('Request failed with status:', response.status);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during fetch:', error);\r\n        }\r\n    }\r\n\r\n    const checkFour = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8081/api/v1/auth/signin', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    email: 'ivan@example.com',\r\n                    password: '2222'\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log('Data received:', data);\r\n            } else {\r\n                console.error('Request failed with status:', response.status);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during fetch:', error);\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <ButtonV2 title='check1 cors' onClick={checkOne}/>\r\n            <ButtonV2 title='check2 no-cors' onClick={checkTwo}/>\r\n            <ButtonV2 title='check4 nothing' onClick={checkFour}/>\r\n        </div>\r\n    )\r\n}\r\nexport default TestSendToServer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}